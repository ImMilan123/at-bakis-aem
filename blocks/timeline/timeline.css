/* Timeline block */
.block.timeline {
    --axis-width: 2px;
    --line-color: #d0d5db; /* neutral-300 */
    --row-gap: 72px;
    --media-width: clamp(240px, 30vw, 320px); /* standardized */
    --media-aspect: 4/3;

    /* defaults so stylelint doesn't complain about unresolved vars */
    --connector: 0px;
    --penetration: 0px;

    position: relative;
    width: 100%;
}

.timeline-wrapper {margin-left: 0;
    margin-right: 0;}

/* center vertical divider */
.block.timeline .axis {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    width: var(--axis-width);
    background: var(--line-color);
    transform: translateX(-50%);
}

/* each row */
.block.timeline .timeline-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: center;            /* centers text vertically to image */
    column-gap: 72px;
    margin: var(--row-gap) 0;
    position: relative;
}

/* base pieces first (prevents no-descending-specificity) */
.block.timeline .media {
    position: relative;
}

.block.timeline .content {
    max-width: 44ch;
}

.block.timeline .content > * + * {
    margin-top: 0.45rem;
}

/* side-specific alignment */
.block.timeline .timeline-row.left .media {
    justify-self: end;
}

.block.timeline .timeline-row.left .content {
    justify-self: start;
}

.block.timeline .timeline-row.right .content {
    order: 1;
    justify-self: end;
}

.block.timeline .timeline-row.right .media {
    order: 2;
    justify-self: start;
}

/* standardized image boxes */
.block.timeline .media picture,
.block.timeline .media img {
    display: block;
    width: var(--media-width);
    aspect-ratio: var(--media-aspect);
    height: auto;
}

.block.timeline .media img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 6px;
}

/* connector line from image center into opposite text */
.block.timeline .timeline-row .media::after {
    content: "";
    position: absolute;
    top: 50%;
    height: 2px;
    background: var(--line-color);
    transform: translateY(-50%);
}

/* use a fallback so stylelint doesn't warn about custom props */
.block.timeline .timeline-row.left .media::after {
    left: 100%;
    width: var(--connector, 0px);
}

.block.timeline .timeline-row.right .media::after {
    right: 100%;
    width: var(--connector, 0px);
}

/* STACK MODE (JS toggles .stack when content can't fit) */
.block.timeline.stack .axis {
    display: none;
}

.block.timeline.stack .timeline-row {
    grid-template-columns: 1fr;
    row-gap: 16px;
    margin: 48px 0;
}

.block.timeline.stack .timeline-row .media::after {
    display: none;
}

.block.timeline.stack .timeline-row .media,
.block.timeline.stack .timeline-row .content {
    justify-self: center;
    max-width: min(640px, 100%);
}

/* small screens: also stack as a fallback */
@media (width <= 900px) {
    .block.timeline .axis {
        display: none;
    }

    .block.timeline .timeline-row {
        grid-template-columns: 1fr;
        row-gap: 16px;
        margin: 48px 0;
    }

    .block.timeline .timeline-row .media::after {
        display: none;
    }

    .block.timeline .timeline-row .media,
    .block.timeline .timeline-row .content {
        justify-self: center;
        max-width: min(640px, 100%);
    }
}
